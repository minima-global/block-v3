/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as SearchImport } from './routes/search'
import { Route as IndexImport } from './routes/index'
import { Route as TransactionsIndexImport } from './routes/transactions/index'
import { Route as BlocksIndexImport } from './routes/blocks/index'
import { Route as TransactionsIdImport } from './routes/transactions/$id'
import { Route as BlocksIdImport } from './routes/blocks/$id'

// Create/Update Routes

const SearchRoute = SearchImport.update({
  path: '/search',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const TransactionsIndexRoute = TransactionsIndexImport.update({
  path: '/transactions/',
  getParentRoute: () => rootRoute,
} as any)

const BlocksIndexRoute = BlocksIndexImport.update({
  path: '/blocks/',
  getParentRoute: () => rootRoute,
} as any)

const TransactionsIdRoute = TransactionsIdImport.update({
  path: '/transactions/$id',
  getParentRoute: () => rootRoute,
} as any)

const BlocksIdRoute = BlocksIdImport.update({
  path: '/blocks/$id',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/search': {
      id: '/search'
      path: '/search'
      fullPath: '/search'
      preLoaderRoute: typeof SearchImport
      parentRoute: typeof rootRoute
    }
    '/blocks/$id': {
      id: '/blocks/$id'
      path: '/blocks/$id'
      fullPath: '/blocks/$id'
      preLoaderRoute: typeof BlocksIdImport
      parentRoute: typeof rootRoute
    }
    '/transactions/$id': {
      id: '/transactions/$id'
      path: '/transactions/$id'
      fullPath: '/transactions/$id'
      preLoaderRoute: typeof TransactionsIdImport
      parentRoute: typeof rootRoute
    }
    '/blocks/': {
      id: '/blocks/'
      path: '/blocks'
      fullPath: '/blocks'
      preLoaderRoute: typeof BlocksIndexImport
      parentRoute: typeof rootRoute
    }
    '/transactions/': {
      id: '/transactions/'
      path: '/transactions'
      fullPath: '/transactions'
      preLoaderRoute: typeof TransactionsIndexImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/search': typeof SearchRoute
  '/blocks/$id': typeof BlocksIdRoute
  '/transactions/$id': typeof TransactionsIdRoute
  '/blocks': typeof BlocksIndexRoute
  '/transactions': typeof TransactionsIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/search': typeof SearchRoute
  '/blocks/$id': typeof BlocksIdRoute
  '/transactions/$id': typeof TransactionsIdRoute
  '/blocks': typeof BlocksIndexRoute
  '/transactions': typeof TransactionsIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/search': typeof SearchRoute
  '/blocks/$id': typeof BlocksIdRoute
  '/transactions/$id': typeof TransactionsIdRoute
  '/blocks/': typeof BlocksIndexRoute
  '/transactions/': typeof TransactionsIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/search'
    | '/blocks/$id'
    | '/transactions/$id'
    | '/blocks'
    | '/transactions'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/search'
    | '/blocks/$id'
    | '/transactions/$id'
    | '/blocks'
    | '/transactions'
  id:
    | '__root__'
    | '/'
    | '/search'
    | '/blocks/$id'
    | '/transactions/$id'
    | '/blocks/'
    | '/transactions/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  SearchRoute: typeof SearchRoute
  BlocksIdRoute: typeof BlocksIdRoute
  TransactionsIdRoute: typeof TransactionsIdRoute
  BlocksIndexRoute: typeof BlocksIndexRoute
  TransactionsIndexRoute: typeof TransactionsIndexRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  SearchRoute: SearchRoute,
  BlocksIdRoute: BlocksIdRoute,
  TransactionsIdRoute: TransactionsIdRoute,
  BlocksIndexRoute: BlocksIndexRoute,
  TransactionsIndexRoute: TransactionsIndexRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/search",
        "/blocks/$id",
        "/transactions/$id",
        "/blocks/",
        "/transactions/"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/search": {
      "filePath": "search.tsx"
    },
    "/blocks/$id": {
      "filePath": "blocks/$id.tsx"
    },
    "/transactions/$id": {
      "filePath": "transactions/$id.tsx"
    },
    "/blocks/": {
      "filePath": "blocks/index.tsx"
    },
    "/transactions/": {
      "filePath": "transactions/index.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
